{"list":[{"title":"SqlJs","link":"<a href=\"module-SqlJs.html\">SqlJs</a>"},{"title":"Database","link":"<a href=\"Database.html\">Database</a>"},{"title":"Database#[\"close\"]","link":"<a href=\"Database.html#%255B%2522close%2522%255D\">Database &rtrif; [\"close\"]</a>","description":"<p>Represents an SQLite database</p>"},{"title":"Database#[\"create_function\"]","link":"<a href=\"Database.html#%255B%2522create_function%2522%255D\">Database &rtrif; [\"create_function\"]</a>","description":"<p>Represents an SQLite database</p>"},{"title":"Database#[\"each\"]","link":"<a href=\"Database.html#%255B%2522each%2522%255D\">Database &rtrif; [\"each\"]</a>","description":"<p>Represents an SQLite database</p>"},{"title":"Database#[\"exec\"]","link":"<a href=\"Database.html#%255B%2522exec%2522%255D\">Database &rtrif; [\"exec\"]</a>","description":"<p>Represents an SQLite database</p>"},{"title":"Database#[\"export\"]","link":"<a href=\"Database.html#%255B%2522export%2522%255D\">Database &rtrif; [\"export\"]</a>","description":"<p>Represents an SQLite database</p>"},{"title":"Database#[\"getRowsModified\"]","link":"<a href=\"Database.html#%255B%2522getRowsModified%2522%255D\">Database &rtrif; [\"getRowsModified\"]</a>","description":"<p>Represents an SQLite database</p>"},{"title":"Database#[\"handleError\"]","link":"<a href=\"Database.html#%255B%2522handleError%2522%255D\">Database &rtrif; [\"handleError\"]</a>","description":"<p>Represents an SQLite database</p>"},{"title":"Database#[\"iterateStatements\"]","link":"<a href=\"Database.html#%255B%2522iterateStatements%2522%255D\">Database &rtrif; [\"iterateStatements\"]</a>","description":"<p>Represents an SQLite database</p>"},{"title":"Database#[\"prepare\"]","link":"<a href=\"Database.html#%255B%2522prepare%2522%255D\">Database &rtrif; [\"prepare\"]</a>","description":"<p>Represents an SQLite database</p>"},{"title":"Database#[\"run\"]","link":"<a href=\"Database.html#%255B%2522run%2522%255D\">Database &rtrif; [\"run\"]</a>","description":"<p>Represents an SQLite database</p>"},{"title":"Statement","link":"<a href=\"Statement.html\">Statement</a>"},{"title":"Statement#[\"bind\"]","link":"<a href=\"Statement.html#%255B%2522bind%2522%255D\">Statement &rtrif; [\"bind\"]</a>","description":"<p>Represents a prepared statement.\nPrepared statements allow you to have a template sql string,\nthat you can execute multiple times with different parameters.</p>\n<p>You can't instantiate this class directly, you have to use a\n{@link Database} object in order to create a statement.</p>\n<p><strong>Warnings</strong></p>\n<ol>\n<li>When you close a database (using db.close()), all\nits statements are closed too and become unusable.</li>\n<li>After calling db.prepare() you must manually free the assigned memory\nby calling Statement.free(). Failure to do this will cause subsequent\n'DROP TABLE ...' statements to fail with 'Uncaught Error: database table\nis locked'.</li>\n</ol>\n<p>Statements can't be created by the API user directly, only by\nDatabase::prepare</p>"},{"title":"Statement#[\"free\"]","link":"<a href=\"Statement.html#%255B%2522free%2522%255D\">Statement &rtrif; [\"free\"]</a>","description":"<p>Represents a prepared statement.\nPrepared statements allow you to have a template sql string,\nthat you can execute multiple times with different parameters.</p>\n<p>You can't instantiate this class directly, you have to use a\n{@link Database} object in order to create a statement.</p>\n<p><strong>Warnings</strong></p>\n<ol>\n<li>When you close a database (using db.close()), all\nits statements are closed too and become unusable.</li>\n<li>After calling db.prepare() you must manually free the assigned memory\nby calling Statement.free(). Failure to do this will cause subsequent\n'DROP TABLE ...' statements to fail with 'Uncaught Error: database table\nis locked'.</li>\n</ol>\n<p>Statements can't be created by the API user directly, only by\nDatabase::prepare</p>"},{"title":"Statement#[\"freemem\"]","link":"<a href=\"Statement.html#%255B%2522freemem%2522%255D\">Statement &rtrif; [\"freemem\"]</a>","description":"<p>Represents a prepared statement.\nPrepared statements allow you to have a template sql string,\nthat you can execute multiple times with different parameters.</p>\n<p>You can't instantiate this class directly, you have to use a\n{@link Database} object in order to create a statement.</p>\n<p><strong>Warnings</strong></p>\n<ol>\n<li>When you close a database (using db.close()), all\nits statements are closed too and become unusable.</li>\n<li>After calling db.prepare() you must manually free the assigned memory\nby calling Statement.free(). Failure to do this will cause subsequent\n'DROP TABLE ...' statements to fail with 'Uncaught Error: database table\nis locked'.</li>\n</ol>\n<p>Statements can't be created by the API user directly, only by\nDatabase::prepare</p>"},{"title":"Statement#[\"get\"]","link":"<a href=\"Statement.html#%255B%2522get%2522%255D\">Statement &rtrif; [\"get\"]</a>","description":"<p>Represents a prepared statement.\nPrepared statements allow you to have a template sql string,\nthat you can execute multiple times with different parameters.</p>\n<p>You can't instantiate this class directly, you have to use a\n{@link Database} object in order to create a statement.</p>\n<p><strong>Warnings</strong></p>\n<ol>\n<li>When you close a database (using db.close()), all\nits statements are closed too and become unusable.</li>\n<li>After calling db.prepare() you must manually free the assigned memory\nby calling Statement.free(). Failure to do this will cause subsequent\n'DROP TABLE ...' statements to fail with 'Uncaught Error: database table\nis locked'.</li>\n</ol>\n<p>Statements can't be created by the API user directly, only by\nDatabase::prepare</p>"},{"title":"Statement#[\"getAsObject\"]","link":"<a href=\"Statement.html#%255B%2522getAsObject%2522%255D\">Statement &rtrif; [\"getAsObject\"]</a>","description":"<p>Represents a prepared statement.\nPrepared statements allow you to have a template sql string,\nthat you can execute multiple times with different parameters.</p>\n<p>You can't instantiate this class directly, you have to use a\n{@link Database} object in order to create a statement.</p>\n<p><strong>Warnings</strong></p>\n<ol>\n<li>When you close a database (using db.close()), all\nits statements are closed too and become unusable.</li>\n<li>After calling db.prepare() you must manually free the assigned memory\nby calling Statement.free(). Failure to do this will cause subsequent\n'DROP TABLE ...' statements to fail with 'Uncaught Error: database table\nis locked'.</li>\n</ol>\n<p>Statements can't be created by the API user directly, only by\nDatabase::prepare</p>"},{"title":"Statement#[\"getColumnNames\"]","link":"<a href=\"Statement.html#%255B%2522getColumnNames%2522%255D\">Statement &rtrif; [\"getColumnNames\"]</a>","description":"<p>Represents a prepared statement.\nPrepared statements allow you to have a template sql string,\nthat you can execute multiple times with different parameters.</p>\n<p>You can't instantiate this class directly, you have to use a\n{@link Database} object in order to create a statement.</p>\n<p><strong>Warnings</strong></p>\n<ol>\n<li>When you close a database (using db.close()), all\nits statements are closed too and become unusable.</li>\n<li>After calling db.prepare() you must manually free the assigned memory\nby calling Statement.free(). Failure to do this will cause subsequent\n'DROP TABLE ...' statements to fail with 'Uncaught Error: database table\nis locked'.</li>\n</ol>\n<p>Statements can't be created by the API user directly, only by\nDatabase::prepare</p>"},{"title":"Statement#[\"getNormalizedSQL\"]","link":"<a href=\"Statement.html#%255B%2522getNormalizedSQL%2522%255D\">Statement &rtrif; [\"getNormalizedSQL\"]</a>","description":"<p>Represents a prepared statement.\nPrepared statements allow you to have a template sql string,\nthat you can execute multiple times with different parameters.</p>\n<p>You can't instantiate this class directly, you have to use a\n{@link Database} object in order to create a statement.</p>\n<p><strong>Warnings</strong></p>\n<ol>\n<li>When you close a database (using db.close()), all\nits statements are closed too and become unusable.</li>\n<li>After calling db.prepare() you must manually free the assigned memory\nby calling Statement.free(). Failure to do this will cause subsequent\n'DROP TABLE ...' statements to fail with 'Uncaught Error: database table\nis locked'.</li>\n</ol>\n<p>Statements can't be created by the API user directly, only by\nDatabase::prepare</p>"},{"title":"Statement#[\"getSQL\"]","link":"<a href=\"Statement.html#%255B%2522getSQL%2522%255D\">Statement &rtrif; [\"getSQL\"]</a>","description":"<p>Represents a prepared statement.\nPrepared statements allow you to have a template sql string,\nthat you can execute multiple times with different parameters.</p>\n<p>You can't instantiate this class directly, you have to use a\n{@link Database} object in order to create a statement.</p>\n<p><strong>Warnings</strong></p>\n<ol>\n<li>When you close a database (using db.close()), all\nits statements are closed too and become unusable.</li>\n<li>After calling db.prepare() you must manually free the assigned memory\nby calling Statement.free(). Failure to do this will cause subsequent\n'DROP TABLE ...' statements to fail with 'Uncaught Error: database table\nis locked'.</li>\n</ol>\n<p>Statements can't be created by the API user directly, only by\nDatabase::prepare</p>"},{"title":"Statement#[\"reset\"]","link":"<a href=\"Statement.html#%255B%2522reset%2522%255D\">Statement &rtrif; [\"reset\"]</a>","description":"<p>Represents a prepared statement.\nPrepared statements allow you to have a template sql string,\nthat you can execute multiple times with different parameters.</p>\n<p>You can't instantiate this class directly, you have to use a\n{@link Database} object in order to create a statement.</p>\n<p><strong>Warnings</strong></p>\n<ol>\n<li>When you close a database (using db.close()), all\nits statements are closed too and become unusable.</li>\n<li>After calling db.prepare() you must manually free the assigned memory\nby calling Statement.free(). Failure to do this will cause subsequent\n'DROP TABLE ...' statements to fail with 'Uncaught Error: database table\nis locked'.</li>\n</ol>\n<p>Statements can't be created by the API user directly, only by\nDatabase::prepare</p>"},{"title":"Statement#[\"run\"]","link":"<a href=\"Statement.html#%255B%2522run%2522%255D\">Statement &rtrif; [\"run\"]</a>","description":"<p>Represents a prepared statement.\nPrepared statements allow you to have a template sql string,\nthat you can execute multiple times with different parameters.</p>\n<p>You can't instantiate this class directly, you have to use a\n{@link Database} object in order to create a statement.</p>\n<p><strong>Warnings</strong></p>\n<ol>\n<li>When you close a database (using db.close()), all\nits statements are closed too and become unusable.</li>\n<li>After calling db.prepare() you must manually free the assigned memory\nby calling Statement.free(). Failure to do this will cause subsequent\n'DROP TABLE ...' statements to fail with 'Uncaught Error: database table\nis locked'.</li>\n</ol>\n<p>Statements can't be created by the API user directly, only by\nDatabase::prepare</p>"},{"title":"Statement#[\"step\"]","link":"<a href=\"Statement.html#%255B%2522step%2522%255D\">Statement &rtrif; [\"step\"]</a>","description":"<p>Represents a prepared statement.\nPrepared statements allow you to have a template sql string,\nthat you can execute multiple times with different parameters.</p>\n<p>You can't instantiate this class directly, you have to use a\n{@link Database} object in order to create a statement.</p>\n<p><strong>Warnings</strong></p>\n<ol>\n<li>When you close a database (using db.close()), all\nits statements are closed too and become unusable.</li>\n<li>After calling db.prepare() you must manually free the assigned memory\nby calling Statement.free(). Failure to do this will cause subsequent\n'DROP TABLE ...' statements to fail with 'Uncaught Error: database table\nis locked'.</li>\n</ol>\n<p>Statements can't be created by the API user directly, only by\nDatabase::prepare</p>"},{"title":"StatementIterator","link":"<a href=\"StatementIterator.html\">StatementIterator</a>"},{"title":"StatementIterator#[\"getRemainingSQL\"]","link":"<a href=\"StatementIterator.html#%255B%2522getRemainingSQL%2522%255D\">StatementIterator &rtrif; [\"getRemainingSQL\"]</a>","description":"<p>An iterator over multiple SQL statements in a string,\npreparing and returning a Statement object for the next SQL\nstatement on each iteration.</p>\n<p>You can't instantiate this class directly, you have to use a\n{@link Database} object in order to create a statement iterator</p>\n<p>{@see Database#iterateStatements}</p>"},{"title":"StatementIterator#[\"next\"]","link":"<a href=\"StatementIterator.html#%255B%2522next%2522%255D\">StatementIterator &rtrif; [\"next\"]</a>","description":"<p>An iterator over multiple SQL statements in a string,\npreparing and returning a Statement object for the next SQL\nstatement on each iteration.</p>\n<p>You can't instantiate this class directly, you have to use a\n{@link Database} object in order to create a statement iterator</p>\n<p>{@see Database#iterateStatements}</p>"},{"title":"initSqlJs","link":"<a href=\"global.html#initSqlJs\">initSqlJs</a>","description":"<p>Asynchronously initializes sql.js</p>"},{"title":"SqlJs","link":"<a href=\"global.html#SqlJs\">SqlJs</a>"},{"title":"SqlJsConfig","link":"<a href=\"global.html#SqlJsConfig\">SqlJsConfig</a>"}]}